<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>PyTorch 1.0 preview: JIT compiler | Italian Association for Machine Learning</title>
    <meta content="GravCMS"  />
<meta content="The Italian Association for Machine Learning (IAML) is a not-for-profit organization with the purpose of promoting knowledge of machine learning in all aspects of the Italian public life, from universities to enterprises and IT professionals."  />
<meta property="og:title" content="PyTorch 1.0 preview: JIT compiler | IAML.it"  />
<meta property="og:image" content="https://iaml.it/blog/alle-prese-con-pytorch-parte-4/1_AURL_YUPXNZ8d1QAR2d8o.png"  />
<meta property="og:url" content="https://iaml.it/blog/pytorch-preview-jit/"  />
<meta property="og:description" content="Abbiamo testato per voi una delle novità più attese di PyTorch 1.0: il just-in-time compiler per ottimizzare i modelli e portarli in produzione!"  />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <link rel="icon" type="image/png" href="/user/themes/deliver/images/favicon.png" />

	<!-- Global site tag (gtag.js) - Google Ads: 774709547 --> <script async src="https://www.googletagmanager.com/gtag/js?id=AW-774709547"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'AW-774709547'); </script> 
	
		
                            		                                                <link href="/user/themes/deliver/css-compiled/nucleus.css" type="text/css" rel="stylesheet" />
<link href="/user/themes/deliver/css-compiled/template.css" type="text/css" rel="stylesheet" />
<link href="/user/themes/deliver/css/custom.css" type="text/css" rel="stylesheet" />
<link href="/user/themes/deliver/css/toc.css" type="text/css" rel="stylesheet" />
<link href="/user/themes/deliver/css/font-awesome.min.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/facebook/css/facebook.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/facebook/assets/unitegallery/css/unite-gallery.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/facebook/assets/unitegallery/themes/default/ug-theme-default.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/markdown-notices/assets/notices.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/breadcrumbs/css/breadcrumbs.css" type="text/css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.0.3/cookieconsent.min.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/events/assets/events.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/form/assets/form-styles.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/mathjax/assets/css/mathjax.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/simplesearch/css/simplesearch.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/highlight/css/zenburn.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/login/css/login.css" type="text/css" rel="stylesheet" />
<link href="/user/themes/deliver/css/slidebars.min.css" type="text/css" rel="stylesheet" />
<link href="/user/themes/deliver/css/slideme.css" type="text/css" rel="stylesheet" />
<link href="/user/plugins/socialbuttons/vendor/rrssb/css/rrssb.css" type="text/css" rel="stylesheet" />


                                                            <script src="/system/assets/jquery/jquery-2.x.min.js" type="text/javascript" ></script>
<script src="/user/themes/deliver/js/modernizr.custom.71422.js" type="text/javascript" ></script>
<script src="/user/plugins/facebook/assets/unitegallery/js/unitegallery.min.js" type="text/javascript" ></script>
<script src="/user/plugins/facebook/assets/unitegallery/themes/default/ug-theme-default.js" type="text/javascript" ></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.0.3/cookieconsent.min.js" type="text/javascript" ></script>
<script src="/user/plugins/events/assets/events.js" type="text/javascript" ></script>
<script src="/user/plugins/mathjax/assets/js/mathjax.js" type="text/javascript" ></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript" ></script>
<script src="/user/plugins/highlight/js/highlight.pack.js" type="text/javascript" ></script>
<script src="/user/themes/deliver/js/deliver.js" type="text/javascript" ></script>
<script src="/user/themes/deliver/js/slidebars.min.js" type="text/javascript" ></script>
<script src="/user/themes/deliver/js/jquery.slideme2.js" type="text/javascript" ></script>
<script src="/user/plugins/socialbuttons/vendor/rrssb/js/rrssb.min.js" type="text/javascript" ></script>

<script>
window.addEventListener("load", function(){
window.cookieconsent.initialise({
"palette": {
    "popup": {
        "background": "#4d4d4d",
        "text": "#fff"
    },
    "button": {
        "background": "#f1d600",
        "text": "#000",
        "border": "#f1d600"
    }
},
"position": "bottom",
"theme": "block",
"content": {
    "message": "This website uses cookies to ensure you get the best experience on our website.",
    "dismiss": "Got it!",
    "link": "Learn more",
    "href": "https://cookiesandyou.com"
}
})});
hljs.initHighlightingOnLoad();

</script>


</head>
<body id="top" class="header-lite fullwidth blogstyling">
    <div id="sb-site">
                <header id="header">
                <div class="logo">
                    <h3><a href="https://iaml.it"><img src="/user/pages/images/IAML_logo_viola.png" /></a></h3>
                                            <ul class="social-icons">
            <li>
            <a href="https://twitter.com/iaml_it">
                <i class="fa fa-twitter"></i>            </a>
        </li>
            <li>
            <a href="https://www.linkedin.com/company/iaml/">
                <i class="fa fa-linkedin"></i>            </a>
        </li>
            <li>
            <a href="https://www.facebook.com/machinelearningitalia/">
                <i class="fa fa-facebook"></i>            </a>
        </li>
            <li>
            <a href="blog.rss">
                <i class="fa fa-rss"></i>            </a>
        </li>
    </ul>  
                                    </div>
                <div id="navbar">
                                                            
<ul class="navigation">
                                                        <li class="">
                    <a href="/">
                                                Home
                    </a>
                </li>
                                                                <li class="">
                    <a href="/activities">
                                                Activities
                    </a>
                </li>
                                                                <li class="">
                    <a href="/supporters">
                                                Supporters
                    </a>
                </li>
                                                                <li class="">
                    <a href="/member">
                                                Become a member
                    </a>
                </li>
                                                                <li class="active">
                    <a href="/blog">
                                                Blog
                    </a>
                </li>
                                                                <li class="">
                    <a href="/governance">
                                                Governance
                    </a>
                </li>
                                                                                                                                </ul>                                                   <form class="search-box">
    <input type="search" placeholder="Search..." value="" data-search-input="/search/query" />
    <script>
    jQuery(document).ready(function($){
        var input = $('[data-search-input]');

        input.on('keypress', function(event) {
            if (event.which == 13 && input.val().length > 3) {
                event.preventDefault();
                window.location.href = input.data('search-input') + ':' + input.val();
            }
        });
    });
    </script>
    <i class="fa fa-search"></i>
</form>                    <span class="panel-activation sb-toggle-left navbar-left menu-btn fa fa-bars"></span>
                </div>
        </header>
        
        
                <section id="body" class="">
                            
				<div class="flush-top blog-header blog-header-image" style="background: #B4B093 url(/user/pages/05.blog/blue_header.jpg) no-repeat right;">
            <h1>PyTorch 1.0 preview: JIT compiler</h1>
        </div>
            
        
<div id="breadcrumbs" itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
                                            <a href="/" itemprop="url"><span itemprop="title">Home</span></a>
                        <i class="fa fa-angle-right"></i>
                                                <a href="/blog" itemprop="url"><span itemprop="title">Blog</span></a>
                        <i class="fa fa-angle-right"></i>
                                                <span itemprop="title">PyTorch 1.0 preview: JIT compiler</span>
                        </div>
		
		<div class="blog-content-item g-grid pure-g-r">
			<div id="item" class="g-block pure-u-2-3">
			    <div class="list-item">

    <div class="list-blog-header">
                    <img src="/images/e/d/d/3/b/edd3ba151348ff8793bb6db08d6d8e57ddfd86f2-1aurlyupxnz8d1qar2d8o.png" />
        
                    <h4><a href="/blog/pytorch-preview-jit">PyTorch 1.0 preview: JIT compiler</a></h4>
        
        <span class="list-blog-date">
            <i class="fa fa-calendar"></i>
            20, Oct
        </span>
                <span class="list-blog-author">
            <i class="fa fa-user"></i>
            Simone Scardapane
        </span>
                       <ul class="tags">
            <i class="fa fa-tag"></i>
                        <li><a href="/blog/tag:pytorch">pytorch</a></li>
                        <li><a href="/blog/tag:jit">jit</a></li>
                        <li><a href="/blog/tag:compiler">compiler</a></li>
                        <li><a href="/blog/tag:caffe">caffe</a></li>
                        <li><a href="/blog/tag:ottimizzazione">ottimizzazione</a></li>
                        <li><a href="/blog/tag:c++">c++</a></li>
                    </ul>
        
    </div>

	<div>
	<br />
	<!-- AddToAny BEGIN -->
<div class="a2a_kit a2a_kit_size_32 a2a_default_style">
<a class="a2a_dd" href="https://www.addtoany.com/share"></a>
<a class="a2a_button_facebook"></a>
<a class="a2a_button_twitter"></a>
<a class="a2a_button_linkedin"></a>
<a class="a2a_button_google_plus"></a>
<a class="a2a_button_email"></a>
</div>
<script async src="https://static.addtoany.com/menu/page.js"></script>
<!-- AddToAny END -->
</div>
	
    <div class="list-blog-padding">

            <p><p>In pochissimo tempo PyTorch è diventato una delle librerie più usate per il deep learning, e si avvicina ormai il <a href="https://pytorch.org/blog/the-road-to-1_0/">rilascio della prima versione stabile</a>. Il codice per la versione 1.0 è in realtà già disponibile da qualche giorno in <a href="https://github.com/pytorch/pytorch/releases">developer's preview</a>, e noi ne abbiamo approfittato per testare una delle novità più attese: il <strong>just-in-time compiler</strong> per ottimizzare i modelli e portarli in produzione!</p>
<p></p>
<h2>Dalla prototipazione alla messa in produzione</h2>
<div class="notices blue">
<p>Interessato a PyTorch? Non perdere i nostri tutorial ufficiali: <a href="https://iaml.it/blog/alle-prese-con-pytorch-parte-1">Alle prese con PyTorch</a>!</p>
</div>
<p>L'aspetto più apprezzato di PyTorch da chi lo utilizza è sicuramente l'estrema <em>semplicità</em> nello scrivere codice e nel prototipare modelli, combinazione di una API ben strutturata ed un meccanismo dinamico di esecuzione del codice che rende lo sviluppo molto intuitivo. Ma questo vantaggio diventa rapidamente un problema quando il codice passa dalla sperimentazione ad un ambiente di <strong>produzione</strong>, dove la velocità di esecuzione e l'ottimizzazione dei modelli diventano essenziali. </p>
<p>Finora, in PyTorch questo si poteva gestire esportando il modello in un formato intermedio, <a href="https://onnx.ai/">ONNX</a>, per poi reimportarlo in <a href="https://caffe2.ai/">Caffe2</a>, un'altra libreria sviluppata da Facebook con molta più attenzione agli aspetti di produzione e di deployment:</p>
<figure role="group">
        <img src="https://iaml.it/blog/pytorch-preview-jit/images/1_bq4-Le3kYMJ-xf9rNzze5A.png"alt="PyTorch ONNX Caffe2" />
        </figure>
<figcaption><a href="https://hackernoon.com/pytorch-1-0-468332ba5163">Fonte: Hackernoon</a></figcaption>
<p>Con l'uscita di PyTorch 1.0, Facebook ha deciso di semplificare questo processo muovendosi verso <strong>l'unificazione delle due librerie</strong>, cominciando 'dal basso' combinando i due repository (leggi anche il <a href="https://caffe2.ai/blog/2018/05/02/Caffe2_PyTorch_1_0.html">comunicato ufficiale dal blog di Caffe2</a>).</p>
<p>Come risultato, la versione 1.0 di PyTorch conterrà un nuovissimo <strong>JIT compiler</strong> per ottimizzare i modelli in fase di produzione, e permettere di eseguirli anche in ambienti non Python (tra cui la nuovissima <a href="https://pytorch.org/cppdocs/">interfaccia C++</a> in beta), sfruttando molte delle ottimizzazioni sviluppate per Caffe2. </p>
<p>Il risultato è un nuovo frontend ibrido dove possiamo usare la modalità dinamica per la prototipazione, ed il compiler per portare progressivamente il modello in produzione:</p>
<figure role="group">
        <img src="https://iaml.it/blog/pytorch-preview-jit/images/pytorch_workflow.png"alt="PyTorch Hybrid Frontend" />
        </figure>
<figcaption><a href="https://pytorch.org/tutorials/beginner/deploy_seq2seq_hybrid_frontend_tutorial.html">Fonte: PyTorch Tutorials</a></figcaption>
<p>Il compiler analizza l'intero modello, sfruttandone la conoscenza completa per creare un grafo estremamente ottimizzato (fino al 20-30% di miglioramento su modelli particolarmente complessi). Se usate anche TensorFlow, il procedimento è molto simile all'utilizzo della <a href="https://medium.com/tensorflow/building-an-iris-classifier-with-eager-execution-13c00a32adb0">eager execution</a> per la prototipazione, e dei <a href="https://www.tensorflow.org/guide/graphs">grafi computazionali</a> per la produzione. Un vantaggio notevole dell'approccio è che qualsiasi modello sviluppato con versioni di PyTorch precedenti non richiederà nessuna modifica.</p>
<p>Quindi, senza altri indugi, passiamo al codice!</p>
<h2>JIT Compiler 1: tracer</h2>
<div class="notices yellow">
<p>Tutto il codice che segue è disponibile in un <a href="https://colab.research.google.com/drive/1qEjNmIKJQSCvIvnHLAn9uKwV0uCRb6pa">unico notebook Colab</a>.</p>
</div>
<p>Il cuore del compiler è <strong>Torch Script</strong>, un <a href="https://pytorch.org/docs/master/jit.html">insieme di istruzioni</a> di basso livello altamente ottimizzate che descrivono le operazioni di un modello, permettendo tra le altre cose di astrarle dall'interprete di Python ed esportarle in altri ambienti più dinamici (es., C++).</p>
<p>Il compiler ha due modalità principali, tutte e due di facile utilizzo:</p>
<ol>
<li>Un <strong>tracer</strong>, che analizza una funzione od un modulo già istanziato, ne registra tutte le operazioni, e converte il tutto nelle relative funzioni in Torch Script.</li>
<li>Le <strong>annotazioni</strong>, che permettono di creare il grafo in Torch Script usando una serie di oggetti ed annotazioni aggiuntive sul codice che definisce i moduli stessi.</li>
</ol>
<div class="notices yellow">
<p>La differenza principale tra le due modalità è che nel primo caso non è possibile usare operazioni di controllo di flusso (es., una istruzione condizionale), in quanto il tracer salverebbe solo uno dei due rami nella sua esecuzione, come vedremo tra pochissimo.</p>
</div>
<p>Cominciamo dal tracer, che è la modalità più semplice. Per farlo, installiamo la versione in developer's preview di PyTorch dal repository ufficiale:</p>
<blockquote>
<p>!pip install torch_nightly -f https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html</p>
</blockquote>
<p>Creiamo una rete neurale come abbiamo visto <a href="https://iaml.it/blog/alle-prese-con-pytorch-parte-2">nei nostri tutorial</a>:</p>
<pre><code class="language-py">import torch
from torch import nn

class CustomModel(nn.Module):
    def __init__(self):
        super(CustomModel, self).__init__()
        self.hidden = nn.Linear(4, 10)
        self.relu = nn.ReLU()
        self.out = nn.Linear(10, 3)

    def forward(self, x):
        x = self.relu(self.hidden(x))
        return self.out(x)</code></pre>
<p>Quando instanziamo il modello e lo facciamo girare, le istruzioni vengono eseguite sequenzialmente, senza nessuna conoscenza delle istruzioni che seguiranno. Per rimediare, possiamo ora creare una versione statica del modello in Torch Script richiamando il tracer di PyTorch:</p>
<pre><code class="language-py">model = CustomModel()
traced_model = torch.jit.trace(model, torch.rand(1, 4))</code></pre>
<p>Si noti come il tracer necessita di un esempio di input per permettergli di eseguire il modello al suo interno. Possiamo eseguire il modello compilato come qualsiasi altro modello:</p>
<pre><code class="language-py">traced_model(torch.rand(1, 4, requires_grad=False))
# tensor([[ 0.1572, -0.3836, -0.1341]], grad_fn=&lt;AddBackward0&gt;)</code></pre>
<p>A differenza del modello originario, <code>traced_model</code> ha una conoscenza di tutte le operazioni da eseguire, codificata nella forma di un grafo. Per vedere l'effetto del compiler, possiamo stampare questo grafo:</p>
<pre><code class="language-py">traced_model.graph
# graph(%0 : Float(1, 4)
# ...
#  %14 : int = prim::Constant[value=0](), scope: CustomModel/ReLU[relu]
#  %15 : int = prim::Constant[value=0](), scope: CustomModel/ReLU[relu]
#  %16 : Float(1, 100) = aten::threshold(%13, %14, %15), scope: CustomModel/ReLU[relu]
# ...
#  return (%25);
# }</code></pre>
<p>Le istruzioni del grafo corrispondono alle operazioni a basso livello nella <a href="https://pytorch.org/cppdocs/">libreria C++</a>. A differenza di un modulo classico, ovviamente, non possiamo più modificarlo:</p>
<pre><code class="language-py"># Non eseguire, genera un errore!
traced_model.hidden = nn.Linear(4, 50)</code></pre>
<p>L'aspetto essenziale è che il modello ora è slegato dall'utilizzo di un interprete Python: possiamo salvarlo su disco e ricaricarlo in altri ambienti, tra cui la nuova API C++ di PyTorch (ancora in beta). Salvare il modello è semplicissimo:</p>
<pre><code class="language-py">torch.jit.save(traced_model, 'model.pt')</code></pre>
<p>Caricarlo ed eseguirlo da C++ (ripreso <a href="https://pytorch.org/tutorials/advanced/cpp_export.html">dalla guida ufficiale</a>):</p>
<pre><code class="language-c">#include &lt;torch/script.h&gt;
#include &lt;iostream&gt;
#include &lt;memory&gt;

int main(int argc, const char* argv[]) {

  // Ricarica il modello dal file .pt
  std::shared_ptr&lt;torch::jit::script::Module&gt; module = torch::jit::load('model.pt');

  // Crea un vettore di input (solo 1)
  std::vector&lt;torch::jit::IValue&gt; inputs;
  inputs.push_back(torch::ones({1, 4}));

  // Esegue il modello
  auto output = module-&gt;forward(inputs).toTensor();

}</code></pre>
<p>Niente di più facile! Come detto prima, però, il tracer è limitato nelle operazioni che può gestire, tra cui i controlli di flusso. Vediamo quindi un esempio più avanzato in cui andremo direttamente a modificare la definizione del modello.</p>
<h2>JIT Compiler 2: Annotazioni</h2>
<p>Supponiamo di voler aggiungere del dropout al nostro modello, il cui comportamento varia a seconda se stiamo allenando o meno il modello. Questo genere di comportamento condizionale non è possibile con il tracer, in quanto verrebbe salvato nel grafo solo uno dei due possibili comportamenti.</p>
<p>Per risolvere possiamo ridefinire direttamente il nostro modello in Torch Script con pochi cambiamenti:</p>
<pre><code class="language-py">from torch.nn import functional as F
class CustomModel(torch.jit.ScriptModule):

    def __init__(self):
        super(CustomModel, self).__init__()
        self.hidden = torch.jit.trace(nn.Linear(4, 100), torch.rand(1, 4))
        self.relu = torch.jit.trace(nn.ReLU(), torch.rand(1, 100))
        self.out = torch.jit.trace(nn.Linear(100, 3), torch.rand(1, 100))

    @torch.jit.script_method
    def forward(self, x, train : bool=False):
        x = self.relu(self.hidden(x))
        x = F.dropout(x, 0.2, train)
        return self.out(x)</code></pre>
<p>Qualche commento in ordine:</p>
<ol>
<li>Il modulo adesso estende <code>torch.jit.ScriptModule</code> invece che <code>torch.nn.Module</code>.</li>
<li>Tutti i moduli definiti nel costruttore devono a loro volta essere <code>ScriptModule</code>. Questo si ottiene lanciando il tracer su ciascuno di essi in fase di costruzione.</li>
<li>Il metodo <code>forward</code> del modulo viene annotato con <code>@torch.jit.script_method</code>. Questo lancia automaticamente la traduzione a Torch Script.</li>
</ol>
<p>Il punto (2) è particolarmente importante, perché permette di combinare le due modalità di compilazione del modello in maniera completamente trasparente. Nel caso in cui la logica del modello sia definita in una funzione Python separata, è sufficiente annotarla con <code>@torch.jit.script</code> invece che <code>@torch.jit.script_method</code>.</p>
<p>Torch Script supporta nativamente buona parte delle istruzioni Python, oltre ovviamente a quasi tutte le istruzioni definite in PyTorch (la lista completa di istruzioni la trovate <a href="https://pytorch.org/docs/master/jit.html#torch-script-language-reference">sul sito</a>).</p>
<p>La parte più interessante è l'utilizzo di <code>F.dropout</code>, con un parametro esplicito che permette di controllare se stiamo allenando il modello (si noti anche l'utilizzo dei type hint per dichiarlo esplicitamente come booleano). Ispezionando il grafico, l'istruzione di dropout è correttamente tradotta nella rispettiva operazione C++:</p>
<blockquote>
<p>%x : Dynamic = aten::dropout(%x.2, %16, %train)</p>
</blockquote>
<p>Ed è tutto per questo tutorial! </p>
<p>Come abbiamo visto, il nuovo compiler di PyTorch permette di ottimizzare modelli per passarli in ambienti di produzione in maniera molto semplice. Mentre aspettiamo che le ultime funzionalità vengano aggiunte al JIT compiler per la release definitiva, ci sembra un buon momento per cominciare ad aggiornare i vostri modelli e prepararne la compilazione!</p>
<hr />
<p>Se questo articolo ti è piaciuto e vuoi tenerti aggiornato sulle nostre attività, ricordati che l'<a href="/member">iscrizione all'Italian Association for Machine Learning</a> è gratuita! Puoi seguirci anche su <a href="https://www.facebook.com/machinelearningitalia/">Facebook</a> e su <a href="https://www.linkedin.com/company/18312943/">LinkedIn</a>.</p></p>
            
    
        <p class="prev-next">
                            <a class="button" href="/blog/geometric-deep-learning-1"><i class="fa fa-chevron-left"></i> Previous Post</a>
            
                            <a class="button" href="/blog/reti-neurali-browser-tensorflow-js">Next Post <i class="fa fa-chevron-right"></i></a>
                    </p>
    
    </div>
</div>
			</div>
			<div id="sidebar" class="g-block size-1-3 pure-u-1-3">
				<div class="sidebar-content">
    <h4>Search the blog</h4>
    <input type="text" placeholder="Search..." value="" data-searchsidebar-input="/search/query" />
<script>
jQuery(document).ready(function($){
    var input = $('[data-searchsidebar-input]');

    input.on('keypress', function(event) {
        if (event.which == 13 && input.val().length > 3) {
            event.preventDefault();
            window.location.href = input.data('searchsidebar-input') + ':' + input.val();
        }
    });
});
</script>
</div>
<!--
<div class="sidebar-content">
	<h4>Some Text Widget</h4>
	<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna.</p>
</div>
!-->
<div class="sidebar-content">
    <h4>Categories</h4>
    

<ul class="archives">
        <li>
        <a href="/blog/category:Tutorials">Tutorials </a> (16)
    </li>
        <li>
        <a href="/blog/category:Discussions">Discussions </a> (12)
    </li>
        <li>
        <a href="/blog/category:Announcements">Announcements </a> (4)
    </li>
        <li>
        <a href="/blog/category:Tutorials%20%28English%29">Tutorials (English) </a> (4)
    </li>
        <li>
        <a href="/blog/category:Articles%27%20summaries">Articles' summaries </a> (3)
    </li>
        <li>
        <a href="/blog/category:Discussions%20%28English%29">Discussions (English) </a> (2)
    </li>
        <li>
        <a href="/blog/category:Focus-on">Focus-on </a> (1)
    </li>
        <li>
        <a href="/blog/category:Reviews">Reviews </a> (1)
    </li>
        <li>
        <a href="/blog/category:Discussion">Discussion </a> (1)
    </li>
    </ul>
</div>
<div class="sidebar-content">
    <h4>Archives</h4>
	<ul class="archives">
    <li>
    	<a href="/blog/archives_month:apr_2020">
        <span class="archive_date">April 2020</span>
                <span>(1)</span>
                </a>
    </li>
</ul>
</div>
<div class="sidebar-content">
    <h4>Popular Tags</h4>
    

<ul class="archives">
        <li>
        <a href="/blog/tag:deep%20learning">deep learning </a> (11)
    </li>
        <li>
        <a href="/blog/tag:pytorch">pytorch </a> (9)
    </li>
        <li>
        <a href="/blog/tag:reti%20neurali">reti neurali </a> (5)
    </li>
        <li>
        <a href="/blog/tag:google">google </a> (4)
    </li>
        <li>
        <a href="/blog/tag:jit">jit </a> (4)
    </li>
        <li>
        <a href="/blog/tag:tensorflow">tensorflow </a> (4)
    </li>
        <li>
        <a href="/blog/tag:ottimizzazione">ottimizzazione </a> (4)
    </li>
        <li>
        <a href="/blog/tag:rete%20neurale">rete neurale </a> (3)
    </li>
        <li>
        <a href="/blog/tag:time%20series">time series </a> (3)
    </li>
        <li>
        <a href="/blog/tag:keras">keras </a> (3)
    </li>
        <li>
        <a href="/blog/tag:reti%20convolutive">reti convolutive </a> (3)
    </li>
        <li>
        <a href="/blog/tag:pipeline">pipeline </a> (2)
    </li>
        <li>
        <a href="/blog/tag:sklearn">sklearn </a> (2)
    </li>
        <li>
        <a href="/blog/tag:autodiff">autodiff </a> (2)
    </li>
        <li>
        <a href="/blog/tag:automatic%20differentation">automatic differentation </a> (2)
    </li>
        <li>
        <a href="/blog/tag:reverse-mode">reverse-mode </a> (2)
    </li>
        <li>
        <a href="/blog/tag:derivate">derivate </a> (2)
    </li>
        <li>
        <a href="/blog/tag:differenziazione">differenziazione </a> (2)
    </li>
        <li>
        <a href="/blog/tag:model%20selection">model selection </a> (2)
    </li>
        <li>
        <a href="/blog/tag:cross%20validation">cross validation </a> (2)
    </li>
        <li>
        <a href="/blog/tag:c%2B%2B">c++ </a> (2)
    </li>
        <li>
        <a href="/blog/tag:numpy">numpy </a> (2)
    </li>
        <li>
        <a href="/blog/tag:vmap">vmap </a> (2)
    </li>
        <li>
        <a href="/blog/tag:caffe">caffe </a> (2)
    </li>
        <li>
        <a href="/blog/tag:compiler">compiler </a> (2)
    </li>
        <li>
        <a href="/blog/tag:jax">jax </a> (2)
    </li>
        <li>
        <a href="/blog/tag:codemotion">codemotion </a> (1)
    </li>
        <li>
        <a href="/blog/tag:bias">bias </a> (1)
    </li>
        <li>
        <a href="/blog/tag:discrimination">discrimination </a> (1)
    </li>
        <li>
        <a href="/blog/tag:fairness">fairness </a> (1)
    </li>
        <li>
        <a href="/blog/tag:iaml">iaml </a> (1)
    </li>
        <li>
        <a href="/blog/tag:database">database </a> (1)
    </li>
        <li>
        <a href="/blog/tag:iperparametri">iperparametri </a> (1)
    </li>
        <li>
        <a href="/blog/tag:autograph">autograph </a> (1)
    </li>
        <li>
        <a href="/blog/tag:head">head </a> (1)
    </li>
        <li>
        <a href="/blog/tag:multi-task">multi-task </a> (1)
    </li>
        <li>
        <a href="/blog/tag:learning">learning </a> (1)
    </li>
        <li>
        <a href="/blog/tag:novit%C3%A0">novità </a> (1)
    </li>
        <li>
        <a href="/blog/tag:dev%20summit">dev summit </a> (1)
    </li>
        <li>
        <a href="/blog/tag:custom%20estimator">custom estimator </a> (1)
    </li>
        <li>
        <a href="/blog/tag:hyperopt">hyperopt </a> (1)
    </li>
        <li>
        <a href="/blog/tag:goodfellow">goodfellow </a> (1)
    </li>
        <li>
        <a href="/blog/tag:nlp">nlp </a> (1)
    </li>
        <li>
        <a href="/blog/tag:dati%20mancanti">dati mancanti </a> (1)
    </li>
        <li>
        <a href="/blog/tag:transformer">transformer </a> (1)
    </li>
        <li>
        <a href="/blog/tag:attenzione">attenzione </a> (1)
    </li>
        <li>
        <a href="/blog/tag:robocop">robocop </a> (1)
    </li>
        <li>
        <a href="/blog/tag:yolo">yolo </a> (1)
    </li>
        <li>
        <a href="/blog/tag:object%20detection">object detection </a> (1)
    </li>
        <li>
        <a href="/blog/tag:bayes">bayes </a> (1)
    </li>
        <li>
        <a href="/blog/tag:autoencoders">autoencoders </a> (1)
    </li>
        <li>
        <a href="/blog/tag:variational">variational </a> (1)
    </li>
        <li>
        <a href="/blog/tag:eager">eager </a> (1)
    </li>
        <li>
        <a href="/blog/tag:imputazione">imputazione </a> (1)
    </li>
        <li>
        <a href="/blog/tag:CIFAR">CIFAR </a> (1)
    </li>
        <li>
        <a href="/blog/tag:word%20embedding">word embedding </a> (1)
    </li>
        <li>
        <a href="/blog/tag:MNIST">MNIST </a> (1)
    </li>
        <li>
        <a href="/blog/tag:immagini">immagini </a> (1)
    </li>
        <li>
        <a href="/blog/tag:classificazione">classificazione </a> (1)
    </li>
        <li>
        <a href="/blog/tag:kpi">kpi </a> (1)
    </li>
        <li>
        <a href="/blog/tag:reprogramming">reprogramming </a> (1)
    </li>
        <li>
        <a href="/blog/tag:adversarial">adversarial </a> (1)
    </li>
        <li>
        <a href="/blog/tag:browser">browser </a> (1)
    </li>
        <li>
        <a href="/blog/tag:javascript">javascript </a> (1)
    </li>
        <li>
        <a href="/blog/tag:reti%20ricorsive">reti ricorsive </a> (1)
    </li>
        <li>
        <a href="/blog/tag:reti%20ricorrenti">reti ricorrenti </a> (1)
    </li>
        <li>
        <a href="/blog/tag:ftth">ftth </a> (1)
    </li>
        <li>
        <a href="/blog/tag:adversarial%20example">adversarial example </a> (1)
    </li>
        <li>
        <a href="/blog/tag:management">management </a> (1)
    </li>
        <li>
        <a href="/blog/tag:robotica">robotica </a> (1)
    </li>
        <li>
        <a href="/blog/tag:ocr">ocr </a> (1)
    </li>
        <li>
        <a href="/blog/tag:focus">focus </a> (1)
    </li>
        <li>
        <a href="/blog/tag:iphone">iphone </a> (1)
    </li>
        <li>
        <a href="/blog/tag:python">python </a> (1)
    </li>
        <li>
        <a href="/blog/tag:face%20id">face id </a> (1)
    </li>
        <li>
        <a href="/blog/tag:momento">momento </a> (1)
    </li>
        <li>
        <a href="/blog/tag:adam">adam </a> (1)
    </li>
        <li>
        <a href="/blog/tag:neuroscienza">neuroscienza </a> (1)
    </li>
        <li>
        <a href="/blog/tag:onde%20cerebrali">onde cerebrali </a> (1)
    </li>
        <li>
        <a href="/blog/tag:torchvision">torchvision </a> (1)
    </li>
        <li>
        <a href="/blog/tag:latin">latin </a> (1)
    </li>
        <li>
        <a href="/blog/tag:pretrained">pretrained </a> (1)
    </li>
        <li>
        <a href="/blog/tag:rete%20convolutiva">rete convolutiva </a> (1)
    </li>
        <li>
        <a href="/blog/tag:autograd">autograd </a> (1)
    </li>
        <li>
        <a href="/blog/tag:swish">swish </a> (1)
    </li>
        <li>
        <a href="/blog/tag:attivazione">attivazione </a> (1)
    </li>
        <li>
        <a href="/blog/tag:checkpoint">checkpoint </a> (1)
    </li>
        <li>
        <a href="/blog/tag:tensori">tensori </a> (1)
    </li>
        <li>
        <a href="/blog/tag:variabili">variabili </a> (1)
    </li>
        <li>
        <a href="/blog/tag:lineare">lineare </a> (1)
    </li>
        <li>
        <a href="/blog/tag:regressione">regressione </a> (1)
    </li>
        <li>
        <a href="/blog/tag:convolutional%20networks">convolutional networks </a> (1)
    </li>
        <li>
        <a href="/blog/tag:Vatican">Vatican </a> (1)
    </li>
        <li>
        <a href="/blog/tag:project">project </a> (1)
    </li>
        <li>
        <a href="/blog/tag:kernel">kernel </a> (1)
    </li>
        <li>
        <a href="/blog/tag:ICLR">ICLR </a> (1)
    </li>
        <li>
        <a href="/blog/tag:ipotesi">ipotesi </a> (1)
    </li>
        <li>
        <a href="/blog/tag:sparsit%C3%A0">sparsità </a> (1)
    </li>
        <li>
        <a href="/blog/tag:funzionale">funzionale </a> (1)
    </li>
        <li>
        <a href="/blog/tag:functional">functional </a> (1)
    </li>
        <li>
        <a href="/blog/tag:adversarial%20attack">adversarial attack </a> (1)
    </li>
        <li>
        <a href="/blog/tag:kmeans">kmeans </a> (1)
    </li>
        <li>
        <a href="/blog/tag:analysis">analysis </a> (1)
    </li>
        <li>
        <a href="/blog/tag:clustering">clustering </a> (1)
    </li>
        <li>
        <a href="/blog/tag:Google">Google </a> (1)
    </li>
        <li>
        <a href="/blog/tag:regression">regression </a> (1)
    </li>
        <li>
        <a href="/blog/tag:JAX">JAX </a> (1)
    </li>
        <li>
        <a href="/blog/tag:gaussian%20process">gaussian process </a> (1)
    </li>
        <li>
        <a href="/blog/tag:ensemble">ensemble </a> (1)
    </li>
        <li>
        <a href="/blog/tag:boosting">boosting </a> (1)
    </li>
        <li>
        <a href="/blog/tag:gradient">gradient </a> (1)
    </li>
        <li>
        <a href="/blog/tag:semi-supervised%20learning">semi-supervised learning </a> (1)
    </li>
        <li>
        <a href="/blog/tag:document%20classification">document classification </a> (1)
    </li>
        <li>
        <a href="/blog/tag:graphs">graphs </a> (1)
    </li>
        <li>
        <a href="/blog/tag:variables">variables </a> (1)
    </li>
        <li>
        <a href="/blog/tag:linear">linear </a> (1)
    </li>
        <li>
        <a href="/blog/tag:k-NN">k-NN </a> (1)
    </li>
    </ul>
</div>
<div class="sidebar-content syndicate">
    <h4>Syndicate</h4>
    <a class="button" href="/blog.atom"><i class="fa fa-rss-square"></i> Atom 1.0</a>
    <a class="button" href="/blog.rss"><i class="fa fa-rss-square"></i> RSS</a>
</div>
			</div>
		</div>
	
                        <div class="modular-row footer ">
    <div class="footer-items">
        <div class="footer-module large">
		<h4>About</h4>
                            <p>Italian Association for Machine Learning (C.F. 97949550582)</p>
            			<p>Write us: info@iaml.it</p>
        </div>
        <div class="footer-module"><h4>Address</h4>
            <p>
                                    <span><strong>Operational office</strong></span>
                                    <span>IAML c/o Pi Campus, via Indonesia 23, 00144 Rome</span>
                                    <span><strong>Legal office</strong></span>
                                    <span>Via Cassia 964, 00189, Rome</span>
                            </p>
        </div>
        <div class="footer-module"><h4>Quick Links</h4>
         <ul class="quickmenu">
                            <li><i class="fa fa-chevron-right"></i><a href="https://iaml.it/home">Home</a></li>
                            <li><i class="fa fa-chevron-right"></i><a href="https://iaml.it/documents">Documents (Italian)</a></li>
                    </ul>
    </div>
   
</div>
<hr>
<div class="footer-modules">
    <div class="footer-copyright">
        Copyright 2018 IAML.IT. All Rights Reserved.
    </div>
    <div class="footer-menu">
    <ul class="othermenu">
           <li><a href="https://learn.getgrav.org/">Powered by Grav</a></li>
           <li><a href="https://github.com/getgrav/grav-theme-deliver">Theme (adapted) from Deliver</a></li>
        </ul>
    </div>
</div>
</div>                    </section>
        
    </div>
    <div class="sb-slidebar sb-left sb-width-thin">
        <div id="panel">
        
<ul class="navigation">
                                                        <li class="">
                    <a href="/">
                                                Home
                    </a>
                </li>
                                                                <li class="">
                    <a href="/activities">
                                                Activities
                    </a>
                </li>
                                                                <li class="">
                    <a href="/supporters">
                                                Supporters
                    </a>
                </li>
                                                                <li class="">
                    <a href="/member">
                                                Become a member
                    </a>
                </li>
                                                                <li class="active">
                    <a href="/blog">
                                                Blog
                    </a>
                </li>
                                                                <li class="">
                    <a href="/governance">
                                                Governance
                    </a>
                </li>
                                                                                                                                </ul>                   </div>
    </div>
        <script src="/user/plugins/simplesearch/js/simplesearch.js" type="text/javascript" ></script>

    <script>
    $(function () {
        $(document).ready(function() {
          $.slidebars({
            hideControlClasses: true,
            scrollLock: true
          });
        });
    });
    </script>
    </body>
</html>
